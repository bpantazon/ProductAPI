#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProductAPI
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="CompanyProducts")]
	public partial class CompanyProductsDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCompanyProduct(CompanyProduct instance);
    partial void UpdateCompanyProduct(CompanyProduct instance);
    partial void DeleteCompanyProduct(CompanyProduct instance);
    #endregion
		
		public CompanyProductsDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["CompanyProductsConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public CompanyProductsDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CompanyProductsDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CompanyProductsDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CompanyProductsDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CompanyProduct> CompanyProducts
		{
			get
			{
				return this.GetTable<CompanyProduct>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CompanyProducts")]
	public partial class CompanyProduct : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Product_Id;
		
		private string _BrandName;
		
		private string _ModelName;
		
		private decimal _Price;
		
		private string _SKU;
		
		private string _Category;
		
		private string _Feature1;
		
		private string _Feature2;
		
		private string _Summary;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProduct_IdChanging(int value);
    partial void OnProduct_IdChanged();
    partial void OnBrandNameChanging(string value);
    partial void OnBrandNameChanged();
    partial void OnModelNameChanging(string value);
    partial void OnModelNameChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnSKUChanging(string value);
    partial void OnSKUChanged();
    partial void OnCategoryChanging(string value);
    partial void OnCategoryChanged();
    partial void OnFeature1Changing(string value);
    partial void OnFeature1Changed();
    partial void OnFeature2Changing(string value);
    partial void OnFeature2Changed();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    #endregion
		
		public CompanyProduct()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Product_Id
		{
			get
			{
				return this._Product_Id;
			}
			set
			{
				if ((this._Product_Id != value))
				{
					this.OnProduct_IdChanging(value);
					this.SendPropertyChanging();
					this._Product_Id = value;
					this.SendPropertyChanged("Product_Id");
					this.OnProduct_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrandName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string BrandName
		{
			get
			{
				return this._BrandName;
			}
			set
			{
				if ((this._BrandName != value))
				{
					this.OnBrandNameChanging(value);
					this.SendPropertyChanging();
					this._BrandName = value;
					this.SendPropertyChanged("BrandName");
					this.OnBrandNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModelName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ModelName
		{
			get
			{
				return this._ModelName;
			}
			set
			{
				if ((this._ModelName != value))
				{
					this.OnModelNameChanging(value);
					this.SendPropertyChanging();
					this._ModelName = value;
					this.SendPropertyChanged("ModelName");
					this.OnModelNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(19,4) NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SKU", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SKU
		{
			get
			{
				return this._SKU;
			}
			set
			{
				if ((this._SKU != value))
				{
					this.OnSKUChanging(value);
					this.SendPropertyChanging();
					this._SKU = value;
					this.SendPropertyChanged("SKU");
					this.OnSKUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Feature1", DbType="VarChar(MAX)")]
		public string Feature1
		{
			get
			{
				return this._Feature1;
			}
			set
			{
				if ((this._Feature1 != value))
				{
					this.OnFeature1Changing(value);
					this.SendPropertyChanging();
					this._Feature1 = value;
					this.SendPropertyChanged("Feature1");
					this.OnFeature1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Feature2", DbType="VarChar(MAX)")]
		public string Feature2
		{
			get
			{
				return this._Feature2;
			}
			set
			{
				if ((this._Feature2 != value))
				{
					this.OnFeature2Changing(value);
					this.SendPropertyChanging();
					this._Feature2 = value;
					this.SendPropertyChanged("Feature2");
					this.OnFeature2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="VarChar(MAX)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
